@page "{LibraryId:int}"
@model IndexModel
@{
    ViewData["Title"] = "Index";
}

<h2>Invitations</h2>
<a asp-route-id="@Model.Library.Id" asp-page="/Library">Back to library</a>
<hr />
<div class="row">
    <div class="col-md-12">
        @if (!ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(false, null, new { @class = "alert alert-danger" })
        }
        <form method="post" class="form-inline">
            <div class="form-group">
                <select name="RoleId" class="form-control">
                    @foreach (var role in Model.Roles)
                    {
                        <option value="@role.Id">@role.Title</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <select name="Expiration" class="form-control">
                    <option value="@IndexModel.Expiration.OneHour">1 Hour</option>
                    <option value="@IndexModel.Expiration.OneDay">1 Day</option>
                    <option value="@IndexModel.Expiration.SevenDays">7 Days</option>
                    <option value="@IndexModel.Expiration.ThirtyDays">30 Days</option>
                    <option value="@IndexModel.Expiration.Never">Never</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" asp-page-handler="InviteUser" />
            </div>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th>Url</th>
                    <th>Role</th>
                    <th>Created By</th>
                    <th>Date Created</th>
                    <th>Date Expires</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var invite in Model.Invitations)
                {
                    <tr>
                        @*TODO: Better way to build link*@
                        <td>@("http://" + HttpContext.Request.Host + "/Join/" + invite.UrlKey)</td>
                        <td>@invite.RoleTitle</td>
                        <td>@(string.IsNullOrWhiteSpace(invite.DisplayName) ? invite.FullName : invite.DisplayName)</td>
                        <td>@invite.CreatedAt</td>
                        <td>@invite.ExpiresAt</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}